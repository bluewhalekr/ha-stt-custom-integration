[
    {
        "label": "Final",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "HomeAssistant",
        "importPath": "homeassistant.core",
        "description": "homeassistant.core",
        "isExtraImport": true,
        "detail": "homeassistant.core",
        "documentation": {}
    },
    {
        "label": "HomeAssistant",
        "importPath": "homeassistant.core",
        "description": "homeassistant.core",
        "isExtraImport": true,
        "detail": "homeassistant.core",
        "documentation": {}
    },
    {
        "label": "STTProvider",
        "importPath": "homeassistant.components.voice_assistant",
        "description": "homeassistant.components.voice_assistant",
        "isExtraImport": true,
        "detail": "homeassistant.components.voice_assistant",
        "documentation": {}
    },
    {
        "label": "SpeechToTextError",
        "importPath": "homeassistant.components.voice_assistant.error",
        "description": "homeassistant.components.voice_assistant.error",
        "isExtraImport": true,
        "detail": "homeassistant.components.voice_assistant.error",
        "documentation": {}
    },
    {
        "label": "ConfigType",
        "importPath": "homeassistant.helpers.typing",
        "description": "homeassistant.helpers.typing",
        "isExtraImport": true,
        "detail": "homeassistant.helpers.typing",
        "documentation": {}
    },
    {
        "label": "CONF_LANGUAGE",
        "kind": 5,
        "importPath": "custom_components.ha_stt_custom_integration.const",
        "description": "custom_components.ha_stt_custom_integration.const",
        "peekOfCode": "CONF_LANGUAGE = \"language\"\nDEFAULT_LANGUAGE = \"ko\"",
        "detail": "custom_components.ha_stt_custom_integration.const",
        "documentation": {}
    },
    {
        "label": "DEFAULT_LANGUAGE",
        "kind": 5,
        "importPath": "custom_components.ha_stt_custom_integration.const",
        "description": "custom_components.ha_stt_custom_integration.const",
        "peekOfCode": "DEFAULT_LANGUAGE = \"ko\"",
        "detail": "custom_components.ha_stt_custom_integration.const",
        "documentation": {}
    },
    {
        "label": "STTApiHandler",
        "kind": 6,
        "importPath": "custom_components.ha_stt_custom_integration.handler",
        "description": "custom_components.ha_stt_custom_integration.handler",
        "peekOfCode": "class STTApiHandler:\n    \"\"\"Handler for STT API responses.\"\"\"\n    def __init__(self, hass: HomeAssistant) -> None:\n        \"\"\"Initialize the handler.\"\"\"\n        self.hass = hass\n    async def process_stt_response(\n        self, stt_response: Dict[str, Any]\n    ) -> Dict[str, Any]:\n        \"\"\"Process STT response and execute Home Assistant API calls.\"\"\"\n        try:",
        "detail": "custom_components.ha_stt_custom_integration.handler",
        "documentation": {}
    },
    {
        "label": "_LOGGER",
        "kind": 5,
        "importPath": "custom_components.ha_stt_custom_integration.handler",
        "description": "custom_components.ha_stt_custom_integration.handler",
        "peekOfCode": "_LOGGER = logging.getLogger(__name__)\nclass STTApiHandler:\n    \"\"\"Handler for STT API responses.\"\"\"\n    def __init__(self, hass: HomeAssistant) -> None:\n        \"\"\"Initialize the handler.\"\"\"\n        self.hass = hass\n    async def process_stt_response(\n        self, stt_response: Dict[str, Any]\n    ) -> Dict[str, Any]:\n        \"\"\"Process STT response and execute Home Assistant API calls.\"\"\"",
        "detail": "custom_components.ha_stt_custom_integration.handler",
        "documentation": {}
    },
    {
        "label": "VoiceProcessorSTTProvider",
        "kind": 6,
        "importPath": "custom_components.ha_stt_custom_integration.voice_assistant",
        "description": "custom_components.ha_stt_custom_integration.voice_assistant",
        "peekOfCode": "class VoiceProcessorSTTProvider(STTProvider):\n    \"\"\"Speech to text provider for Voice Processor.\"\"\"\n    def __init__(self, hass: HomeAssistant) -> None:\n        \"\"\"Initialize the provider.\"\"\"\n        super().__init__(hass)\n        self.handler = STTApiHandler(hass)\n    @property\n    def supported_languages(self) -> list[str]:\n        \"\"\"Return a list of supported languages.\"\"\"\n        return [\"ko\"]",
        "detail": "custom_components.ha_stt_custom_integration.voice_assistant",
        "documentation": {}
    },
    {
        "label": "_LOGGER",
        "kind": 5,
        "importPath": "custom_components.ha_stt_custom_integration.voice_assistant",
        "description": "custom_components.ha_stt_custom_integration.voice_assistant",
        "peekOfCode": "_LOGGER = logging.getLogger(__name__)\nclass VoiceProcessorSTTProvider(STTProvider):\n    \"\"\"Speech to text provider for Voice Processor.\"\"\"\n    def __init__(self, hass: HomeAssistant) -> None:\n        \"\"\"Initialize the provider.\"\"\"\n        super().__init__(hass)\n        self.handler = STTApiHandler(hass)\n    @property\n    def supported_languages(self) -> list[str]:\n        \"\"\"Return a list of supported languages.\"\"\"",
        "detail": "custom_components.ha_stt_custom_integration.voice_assistant",
        "documentation": {}
    }
]